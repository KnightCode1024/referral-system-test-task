services:
  postgres:
    image: postgres:17-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:8-alpine
    hostname: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data

  backend:
    build: ./backend
    image: backend
    restart: always
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./backend:/app/www/backend
    ports:
        - "8000:8000"
    depends_on:
      - postgres
      - redis

  worker:
    build: ./backend
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./backend:/backend
    env_file:
      - .env
    links:
      - redis
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_NAME=${POSTGRES_NAME}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}

volumes:
  postgres-data:
  redis-data:
